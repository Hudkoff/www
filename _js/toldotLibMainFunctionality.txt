/* ТолдотЛиб - ТЛ - библиотека, содержащая функции для работы на сайте Толдот.ру и на внутренних сайтах систем управления для модераторов. При необходимости также можно пользоваться Джиквери и Джиквери ЮИ, которые идут в комплекте внутри файла toldot.js.

Функциональность библиотеки делится на несколько основных направлений.
1. Упрощение работы в интерфейсе-списке
Подавляющее большинство интерфейсов внутренних систем управления основаны на работе со списками объектов (ul -> li) на странице. ТЛ позволяет легко оперировать интерфейсом, основанном на одном или нескольких списках объектов, предоставляет удобный механизм работы с лейблами (метками) объектов, одновременно обмениваясь данными с сервером через Аякс. 
2. Упрощение работы со стандартными интерфейсами
В это направление включается работа со всплывающими окнами, раскрывающимися блоками, формами, иными элементами страницы.
3. Расширение совместимости и кроссбраузерности.
В это направление включается запуск различных функций, добавляющих функциональные фожности или расширяющих имеющиеся на браузеры, которые их не поддерживают.
4. Еврейские даты.
Упрощенный встроенный джаваскрипт-движок работы с еврейскими датами, который существенно расширяет свои возможности при подключении дополнительной библиотеки toldot.jewishCalendar

----------------------------------------------------

Архитектура ТЛ: файлом toldot.js создается объект window.toldot, вложенные элементы которого являются методами/свойствами. Методы являются ссылками на описанные в коде ниже функции. Не все функции представлены в виде методов - некоторые из них используются только внутри замыкания и недоступны извне. Каждая ф-я в файле исходнике имеет говорящее название, названия переменных и краткое/подробное описание работы. В самом начале кода перед описанием объекта описываются и вызываются служебные функции.
Все интерфейсные изменения делаются при помощи вспомогательных классов стилей ТЛ, названия которых начинаются на toli, часть классов описана в файле toldotLib.css
Пока не все классы окон, открывающихся через ТЛ сделаны в виде уникальных классов, относящихся к ТЛ, часто используются старые классы (взятые из окон, которые были на сайте до ТЛ, и во многих местах на сайте пока используется старый механизм окон), описанные в файле http://toldot.ru/images/css/main.css 
В процессе текущего переделывания сайта одной из задач является полное переделывание окон и других интерфейсов под ТЛ

РАБОТА С ОКНАМИ
Работа со всеми окнами через конструктор ТЛ обеспечивает единый подход к оперированию окнами, ТЛ автоматически следит за открытыми окнами, закрывает их по нажатии Esc, позволяя существенно упростить код страницы. Так, чтобы ТЛ отобразило форму во всплывающем окне достаточно только описать на странице эту форму, указав style='display:none', а затем вызвать  toldot.showInfoWindow(event,winHeader,winHTML,dataForm), указав айди формы в качестве значения параметра и форма отобразится в виде окна с уже навешанными на него механизмами интерфейса.

Изменение дизайна встроенных элементов ТЛ, таких как попапы и окна делаются через изменение кода самой библиотеки.

Далее следует краткое описание нескольких интерфейсных функций ТЛ. Остальные функции описаны в комментариях в файле-исходнике.

1. Показать большое всплывающее окно (желтое с черной заголовочной областью):
    toldot.showInfoWindow(event,winHeader,winHTML,dataForm)
        event - если показ окна вызван событием (т.е. не функцией), то передаем event, если нет - то передаем false
        winHeader - стринг, текстовый заголовок окна
        winHTML - стринг, аштеэмель код, который выдается в верхней части рабочей области окна (например, текст сообщения в информационном окне)
        dataForm - стринг/объект, необязательный параметр, передающий форму (в виде ее айди или аштеэмель объекта), которую надо превратить в окно, если он задан, то winHTML будет расположен над кодом формы в окне. При этом, при описании формы в коде страницы нужно будет указать  style='display:none', чтобы она не отображалась
        
    пример:
    ... onclick = "toldot.showInfoWindow(event,'Пример окна','Это верхняя строка в окне', 'windowFormID')"
    
2. Показать произвольное окно:
    toldot.showPopup(event,element,windowClass,createNew,innerHTML,complexWindow)
        event - если показ окна вызван событием (т.е. не функцией), то передаем event, если нет - то передаем false
        element - аштеэмель объект, на котором кликнули для открытия скрытого окна (это нужно при использовании больших списков объектов, когда при клике на кнопку внутри одного из них открывается окошко из этого же объекта-родителя, то есть, как бы, ближайшее к этой кнопке). Обычно в качестве значения передается this
        windowClass - стринг, класс, по которому можно идентифицировать блок всплывающего окошка
        createNew - булеан, указывает, создать ли код окошка полностью заново (то есть он не присутствует на странице)
        innerHTML - стринг - код окна в случае, если createNew = true
        complexWindow - необязательный, булеан. Он введен для возможности более универсального использования данной функции изнутри толдотлиба, таким образом, при внешнем вызове со страницы он практически не должен применяться. Если он не указан, то функция создает простые окна сама, добавляя к ним простейшую оплетку либо берет код окна из innerHTML. Если он указан, то функция только показывает окно, переданное ей функцией-билдером, например showInfoWindow() (из которой в таком случае она вызывается), при этом если задан createNew то напонение берется из innerHTML, а если нет, то из element
3. Закрыть любое показанное при помощи толдотлиб окно:
    toldot.closePopup(event)
        event - если показ окна вызван событием (т.е. не функцией), то передаем event, если нет - то передаем false
4. Показать окошко "Идет загрузка" на всю страницу
    toldot.isDownloading(event,whatToDo)
        event - если показ окна вызван событием (т.е. не функцией), то передаем event, если нет - то передаем false
        whatToDo - булеан, необязательный - можно указать, показать окошко-сообщение о загрузке или скрыть его
        Функция при запуске проверит автоматически, отображается ли окошко о загрузке или нет и поменяет его состояние. При этом, в случае, если на странице открыто любое другое окно, открытое ранее при помощи толдотлиб, то она его предварительно закроет
5. Автоматически визуально оформить (а кроме того заблокировать для изменения пользователем мышью) любой тег, в котором идет в данный момент загрузка или обработка информации
toldot.blockIsDownloading(event,whatToDo,block)
Функционально похож на предыдущую ф-ю, но не добавляет окно, а оформляет сам этот блок.

6. Показать блок с дополнительной информацией
    toldot.openAddInfo(element, parentClass, addInfoNewClass)
    ищет в объекте родителе кликнутого элемента блок допинформации и либо открывает его либо скрывает, отличается от showpopup тем, что тот - для показа всплывающего окна, которое может быть показано только одно, то есть ТЛ проверяет, нет ли других и закрывает их, а этот - не проверяет - просто открывает и закрывает, независимо от других подобных блоков
    
РАБОТА С ОБЪЕКТАМИ В СПИСКЕ

Для работы с объектами выбрана следующая модель. При разработке интерфейса с отображением некоторого списка объектов необходимо пользоваться следующей структурой тегов:

<ul> //тег родителя данного списка
    <li> // тег объкта в списке
    //содержимое объекта в списке
    </li>
...
</ul>

Ее применение позволит при использовании Толдотлиб для обработки кода на стороне клиента встраивать в тело каждого объекта функции обработчики, которые будут сами определелять, с каким конкретно объектом они в данный момент работают без необходимости вручную идентифицировать объект при помощи id
когда списков на странице несколько и требуется идентификация - это можно сделать массово, задав стилевой класс.

1. Выделение данного объекта в списке
    toldot.selectObject(element, parentClass)
    При работе со списком объектов, при нажатии на кнопку/текст/галочку в одном из них выделяет объект-родитель. Выделение производится добавлением/удалением у родителя класса selected
        element - аштеэмель объект, на котором кликнули для выполнения операции. Обычно в качестве значения передается this
        parentClass - класс, по которому можно идентифицировать родителя, с которым необходимо произвести действие

2. Удаление данного объекта из списка
    toldot.deleteObject(element, parentClass)
        element - аштеэмель объект, на котором кликнули для выполнения операции. Обычно в качестве значения передается this
        parentClass - класс, по которому можно идентифицировать родителя, с которым необходимо произвести действие

3. Получение номера объекта
    toldot.getObjectNumber(element, parentClass)
    Возвращает номер в списке объекта внутри которого кликнули
        element - аштеэмель объект, на котором кликнули для выполнения операции. Обычно в качестве значения передается this
        parentClass - класс, по которому можно идентифицировать родителя, с которым необходимо произвести действие
*/